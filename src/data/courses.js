import reactNativeImg from '../images/reactNative.jpg';
import nodeJsImg from '../images/node.png';
import mernImg from '../images/fullStack.png';
import algorithmsImg from '../images/dsa.png';
import machineLearningImg from '../images/ml.png';
import cyberSecurityImg from '../images/cyberSecurity.jpeg';

export const courses = [
  {
    id: 1,
    name: 'Introduction to React Native',
    instructor: 'John Doe',
    description: 'Learn the basics of React Native development...',
    enrollmentStatus: 'Open',
    duration: '8 weeks',
    schedule: 'Tuesdays and Thursdays, 6:00 PM - 8:00 PM',
    location: 'Online',
    prerequisites: ['Basic JavaScript knowledge', 'Familiarity with React'],
    syllabus : [
      { week: 1, topic: 'Introduction to React Native', content: 'Overview of React Native, setting up the development environment, and understanding the basics of React Native.' },
      { week: 2, topic: 'Building Your First App', content: 'Creating a simple mobile app, understanding components, and using basic React Native components like View, Text, and Image.' },
      { week: 3, topic: 'Navigation in React Native', content: 'Implementing navigation in your app using React Navigation, understanding stack and tab navigation.' },
      { week: 4, topic: 'State Management with Redux', content: 'Introduction to state management in React Native, using Redux for managing global state in your app.' },
      { week: 5, topic: 'Styling and Layouts', content: 'Understanding styling in React Native, using Flexbox for layout, and implementing responsive design.' },
      { week: 6, topic: 'Working with APIs', content: 'Fetching data from APIs, handling asynchronous requests, and displaying data in your app using FlatList.' },
      { week: 7, topic: 'Handling User Input', content: 'Implementing forms, handling user input with TextInput, and validating user input.' },
      { week: 8, topic: 'Deploying Your App', content: 'Preparing your app for deployment, generating APK/IPA files, and deploying your app to Google Play Store and Apple App Store.' },
    ]
    ,
    thumbnail: reactNativeImg, 
  },
  {
    id: 2,
    name: 'Advanced Node.js',
    instructor: 'Jane Smith',
    description: 'Deep dive into Node.js for advanced backend development...',
    enrollmentStatus: 'Closed',
    duration: '10 weeks',
    schedule: 'Mondays and Wednesdays, 7:00 PM - 9:00 PM',
    location: 'Online',
    prerequisites: ['Intermediate JavaScript', 'Basic understanding of Node.js'],
    syllabus: [
      { week: 1, topic: 'Advanced Asynchronous Programming', content: 'Exploring async/await, promises, and handling asynchronous operations in JavaScript.' },
  { week: 2, topic: 'Building REST APIs', content: 'Designing and implementing RESTful services, understanding HTTP methods, and building APIs using Node.js and Express.' },
  { week: 3, topic: 'Error Handling and Debugging', content: 'Strategies for error handling in asynchronous code, debugging techniques, and using tools like Node.js debugger and Chrome DevTools.' },
  { week: 4, topic: 'Authentication and Authorization', content: 'Implementing user authentication, managing sessions, and securing your APIs with JWT (JSON Web Tokens).' },
  { week: 5, topic: 'Database Integration', content: 'Connecting your API to a database, working with SQL/NoSQL databases, and performing CRUD operations.' },
  { week: 6, topic: 'Advanced API Features', content: 'Implementing pagination, sorting, filtering, and other advanced features in your REST APIs.' },
  { week: 7, topic: 'API Testing', content: 'Writing tests for your APIs, using tools like Postman and Jest, and ensuring API reliability.' },
  { week: 8, topic: 'Caching and Performance Optimization', content: 'Implementing caching strategies, optimizing API performance, and understanding tools like Redis.' },
  { week: 9, topic: 'API Documentation and Versioning', content: 'Documenting your APIs using tools like Swagger, managing API versions, and maintaining backward compatibility.' },
  { week: 10, topic: 'Deploying and Scaling APIs', content: 'Deploying your APIs to cloud platforms, setting up CI/CD pipelines, and scaling your services for high traffic.' },
    ],
    thumbnail: nodeJsImg, 
  },

  {
    id: 3,
    name: 'Full-Stack Development (MERN)',
    instructor: 'Emily Johnson',
    description: 'Become a full-stack developer with MongoDB, Express, React, and Node.js...',
    enrollmentStatus: 'Open',
    duration: '12 weeks',
    schedule: 'Saturdays, 10:00 AM - 1:00 PM',
    location: 'In-person at ABC Coding Bootcamp',
    prerequisites: ['Basic JavaScript knowledge', 'Familiarity with web development'],
    syllabus: [
      { week: 1, topic: 'Introduction to MERN Stack', content: 'Overview of MongoDB, Express, React, and Node.js. Understanding the architecture and benefits of using the MERN stack.' },
      { week: 2, topic: 'Setting Up Your Development Environment', content: 'Installing necessary tools and libraries such as Node.js, npm/yarn, MongoDB, and setting up a development workflow.' },
      { week: 3, topic: 'Basic MongoDB Operations', content: 'Introduction to MongoDB, CRUD operations, and schema design using Mongoose.' },
      { week: 4, topic: 'Building a REST API with Express', content: 'Creating and structuring a RESTful API using Express, handling routes, middleware, and error handling.' },
      { week: 5, topic: 'Integrating MongoDB with Express', content: 'Connecting Express with MongoDB using Mongoose, creating and managing data models, and implementing CRUD operations.' },
      { week: 6, topic: 'Introduction to React', content: 'Understanding React fundamentals, components, state, and props. Building simple React applications.' },
      { week: 7, topic: 'React Hooks and Context API', content: 'Using React hooks (useState, useEffect) and Context API for state management in functional components.' },
      { week: 8, topic: 'Connecting React with Express API', content: 'Fetching data from the Express API in React, managing state with hooks, and handling API responses.' },
      { week: 9, topic: 'User Authentication and Authorization', content: 'Implementing user authentication with JWT, managing sessions, and protecting routes in both Express and React applications.' },
      { week: 10, topic: 'Building a Full-Stack Application', content: 'Integrating the front-end and back-end to create a complete MERN stack application. Implementing features such as user registration, login, and CRUD operations.' },
      { week: 11, topic: 'Testing and Debugging', content: 'Writing tests for both Express and React applications, using tools like Jest and React Testing Library, and debugging common issues.' },
      { week: 12, topic: 'Deployment and Scaling', content: 'Deploying your MERN stack application to platforms like Heroku or Vercel, setting up continuous integration/deployment (CI/CD), and scaling your application.' },
    ],
    thumbnail: mernImg, 
  },
  {
    id: 4,
    name: 'Data Structures and Algorithms',
    instructor: 'Michael Brown',
    description: 'Master data structures and algorithms for efficient coding...',
    enrollmentStatus: 'Open',
    duration: '8 weeks',
    schedule: 'Thursdays, 6:00 PM - 8:00 PM',
    location: 'Online',
    prerequisites: ['Basic programming knowledge'],
    syllabus: [
      { week: 1, topic: 'Introduction to Data Structures', content: 'Understanding basic data structures such as arrays, linked lists, and stacks. Overview of their use cases and operations.' },
      { week: 2, topic: 'Introduction to Queues and Deques', content: 'Exploring queues, deques, and their applications. Implementing these data structures and understanding their operations.' },
      { week: 3, topic: 'Trees and Binary Trees', content: 'Understanding tree data structures, including binary trees, binary search trees, and tree traversal techniques.' },
      { week: 4, topic: 'Advanced Trees: AVL and Red-Black Trees', content: 'Learning about balanced trees, including AVL trees and Red-Black trees. Understanding their properties and balancing algorithms.' },
      { week: 5, topic: 'Graphs and Graph Algorithms', content: 'Exploring graph data structures, including adjacency lists and matrices. Implementing graph traversal algorithms such as BFS and DFS.' },
      { week: 6, topic: 'Introduction to Sorting Algorithms', content: 'Learning about sorting algorithms including bubble sort, selection sort, and insertion sort. Analyzing their time and space complexity.' },
      { week: 7, topic: 'Advanced Sorting Algorithms', content: 'Understanding more efficient sorting algorithms such as merge sort, quicksort, and heapsort. Comparing their performance and use cases.' },
      { week: 8, topic: 'Algorithmic Problem Solving', content: 'Applying data structures and algorithms to solve complex problems. Practice with problem-solving techniques and optimization strategies.' },
    ],
    thumbnail: algorithmsImg, 
  },
  {
    id: 5,
    name: 'Machine Learning',
    instructor: 'Sarah Davis',
    description: 'Get started with machine learning concepts and applications...',
    enrollmentStatus: 'Open',
    duration: '6 weeks',
    schedule: 'Fridays, 5:00 PM - 7:00 PM',
    location: 'Online',
    prerequisites: ['Basic Python knowledge', 'Understanding of statistics'],
    syllabus:  [
      { week: 1, topic: 'Introduction to Machine Learning', content: 'Overview of machine learning, types of learning (supervised, unsupervised, reinforcement), and applications in various fields.' },
      { week: 2, topic: 'Supervised Learning: Regression', content: 'Understanding regression techniques, including linear regression, evaluation metrics (MSE, RMSE), and practical applications.' },
      { week: 3, topic: 'Supervised Learning: Classification', content: 'Exploring classification algorithms, such as logistic regression, k-NN, decision trees, and evaluation metrics (accuracy, precision, recall, F1-score).' },
      { week: 4, topic: 'Unsupervised Learning', content: 'Introduction to unsupervised learning techniques, including clustering (k-means, hierarchical) and dimensionality reduction (PCA, t-SNE).' },
      { week: 5, topic: 'Model Evaluation and Tuning', content: 'Techniques for evaluating machine learning models, including cross-validation, hyperparameter tuning, and model selection.' },
      { week: 6, topic: 'Machine Learning in Practice', content: 'Applying machine learning techniques to real-world problems, understanding data preprocessing, feature engineering, and deployment considerations.' },
    ],
    thumbnail: machineLearningImg, 
  },
  {
    id: 6,
    name: 'Introduction to Cybersecurity',
    instructor: 'David Martinez',
    description: 'Learn the fundamentals of cybersecurity and how to protect systems...',
    enrollmentStatus: 'Open',
    duration: '6 weeks',
    schedule: 'Tuesdays, 4:00 PM - 6:00 PM',
    location: 'Online',
    prerequisites: ['Basic understanding of computer networks'],
    syllabus: [
      { week: 1, topic: 'Introduction to Cybersecurity', content: 'Overview of cybersecurity concepts, common threats and vulnerabilities, and the importance of cybersecurity practices.' },
      { week: 2, topic: 'Network Security', content: 'Understanding network security fundamentals, including firewalls, VPNs, secure protocols (HTTPS, SSH), and network architecture.' },
      { week: 3, topic: 'Cryptography Basics', content: 'Introduction to cryptography, including encryption algorithms (AES, RSA), hashing functions (SHA), and key management practices.' },
      { week: 4, topic: 'Authentication and Authorization', content: 'Exploring authentication methods (passwords, MFA), authorization mechanisms, and best practices for securing user access and identity management.' },
      { week: 5, topic: 'Security Threats and Vulnerabilities', content: 'Identifying and understanding common security threats (malware, phishing, DDoS attacks) and vulnerabilities (SQL injection, cross-site scripting).' },
      { week: 6, topic: 'Incident Response and Security Best Practices', content: 'Learning how to respond to security incidents, perform digital forensics, and implement security best practices for maintaining a secure environment.' },
    ],
    thumbnail: cyberSecurityImg, 
  },
];
